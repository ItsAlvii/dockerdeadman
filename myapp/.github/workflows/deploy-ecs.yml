name: Deploy Frontend to ECS

on:
  push:
    branches: [ main ]

env:
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Login to ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build Docker image
        run: |
          IMAGE=${{ secrets.ECR_FRONTEND_REPO }}:${IMAGE_TAG}
          docker build -t $IMAGE ./frontend
          docker push $IMAGE

      - name: Register new ECS task definition
        run: |
          jq --arg IMAGE "${{ secrets.ECR_FRONTEND_REPO }}:${IMAGE_TAG}" \
             '.containerDefinitions[0].image = $IMAGE' ecs-taskdef.json > ecs-taskdef-updated.json
          aws ecs register-task-definition --cli-input-json file://ecs-taskdef-updated.json

      - name: Update ECS service
        run: |
          CLUSTER="deadman-frontend-cluster"
          SERVICE="deadman-frontend-service"
          aws ecs update-service --cluster $CLUSTER --service $SERVICE --force-new-deployment

